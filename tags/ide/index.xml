<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Selenium – ide</title><link>https://www.selenium.dev/tags/ide/</link><description>Recent content in ide on Selenium</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 06 Aug 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://www.selenium.dev/tags/ide/index.xml" rel="self" type="application/rss+xml"/><item><title>Blog: Selenium IDE Is Dead, Long Live Selenium IDE!</title><link>https://www.selenium.dev/blog/2018/long-live-selenium-ide/</link><pubDate>Mon, 06 Aug 2018 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2018/long-live-selenium-ide/</guid><description>
&lt;p>In August of 2017 Simon shared the bleak, hard news that as of Firefox 55 Selenium IDE would no longer work.
Selenium IDE (or as we’ll refer to it from here on out – the Legacy IDE) was, and is, dead.&lt;/p>
&lt;p>Since then quite a lot has happened with the IDE. We have a new version of it which we are referring to as… Selenium IDE!&lt;/p>
&lt;p>&lt;strong>It is currently in “alpha” and available for use in both
&lt;a href="https://chrome.google.com/webstore/detail/selenium-ide/mooikfkahbdckldjjndioackbalphokd">Chrome&lt;/a> and
&lt;a href="https://addons.mozilla.org/en-US/firefox/addon/selenium-ide/">Firefox&lt;/a>.&lt;/strong>&lt;/p>
&lt;p>In his post Simon also mentioned “the fine people at &lt;a href="https://applitools.com">Applitools&lt;/a>“. This includes Tomer Steinfeld,
Dave Haeffner, and Doron Zavalevsky. Together, along with contributions from the rest of the Selenium community and
the SideeX project, we have been able to get the new Selenium IDE out into the wild. We are also working to close the gap
on feature parity with its predecessor along with adding some much needed enhancements to the tool (more on that in future posts).&lt;/p>
&lt;p>We’d love for you to give the new IDE a try and let us know what you think. Visit either the
&lt;a href="https://chrome.google.com/webstore/detail/selenium-ide/mooikfkahbdckldjjndioackbalphokd">Chrome Web Store&lt;/a> or
&lt;a href="https://addons.mozilla.org/en-US/firefox/addon/selenium-ide/">Firefox Add-ons&lt;/a> to install it. For info on how to
use the tool, you can check out the getting started documentation on Selenium HQ.&lt;/p>
&lt;p>If you have any questions you can find us on the &lt;a href="https://selenium.dev/support/">Selenium Slack/IRC chat channel&lt;/a>.
Think you found a bug? &lt;a href="https://github.com/SeleniumHQ/selenium-ide/issues">File an issue&lt;/a>. Want to contribute?
Take a look at the project on &lt;a href="https://github.com/SeleniumHQ/selenium-ide">GitHub&lt;/a>.&lt;/p>
&lt;p>Happy Testing!&lt;/p></description></item><item><title>Blog: Firefox 55 and Selenium IDE</title><link>https://www.selenium.dev/blog/2017/firefox-55-and-selenium-ide/</link><pubDate>Wed, 09 Aug 2017 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2017/firefox-55-and-selenium-ide/</guid><description>
&lt;p>The bad news: &lt;strong>from Firefox 55 onwards, Selenium IDE will no longer work&lt;/strong>.&lt;/p>
&lt;p>The reasons for this are complex, but boil down to two main causes:&lt;/p>
&lt;ol>
&lt;li>Browsers are complicated pieces of software that are constantly evolving. Mozilla has been working hard to make Firefox &lt;a href="https://blog.mozilla.org/blog/2017/06/13/faster-better-firefox/">faster and more stable&lt;/a>, while still retaining the flexibility and ease of extension that we’ve come to know and love. As part of that process, Firefox is switching extensions from the original “&lt;a href="https://blog.mozilla.org/addons/2016/11/23/add-ons-in-2017/">XPI&lt;/a>” format, to a newer, more widely adopted “&lt;a href="https://developer.mozilla.org/en-US/Add-ons/WebExtensions">Web Extension&lt;/a>” mechanism.&lt;/li>
&lt;li>The Selenium project lacks someone with the time and energy to move the IDE forwards to take advantage of the new technologies.&lt;/li>
&lt;/ol>
&lt;p>&lt;a href="http://www.seleniumhq.org/">Selenium&lt;/a> is one of the most widely used pieces of testing software there is. Despite this, the team of people regularly contributing is small: since the start of the year, there are only 11 people who have made more than 10 commits, with two people accounting for more than half of those. Since 2016, only one person has been maintaining the IDE.&lt;/p>
&lt;p>Selenium is an Open Source project. None of the core contributors — not the IDE maintainer, not the language binding owners — are paid to work on work on it. They do it because they love working on the code, and they typically do it in their “copious free time”. The IDE maintainer has had almost none of that to spare. We should all be thanking that committer for his time and effort. Thank you, Samit!&lt;/p>
&lt;p>So what can we do to move forward? The first thing is that there are now a wealth of tools that are stepping up to fill the gap. You should go and have a look at them. The second thing is that there is an effort to rebuild IDE using modern APIs, to be usable across more than just Firefox. The fine people at &lt;a href="https://applitools.com/">Applitools&lt;/a> are helping with this effort.&lt;/p>
&lt;p>The third thing? That’s you. &lt;strong>You could help us&lt;/strong>.&lt;/p>
&lt;p>If you believe that a friendly UI for quickly recording and playing back tests is a useful Open Source tool, then please come and join us! The main technical discussions are happening on the #selenium IRC channel. If you’d prefer &lt;a href="https://seleniumhq.herokuapp.com/">Slack&lt;/a>, you can join us on that too. Or there’s the ever useful &lt;a href="https://groups.google.com/forum/#!forum/selenium-developers">selenium-developers&lt;/a> mailing list. Come onboard. We’d love your help, and IDE is a wonderful thing to contribute to!&lt;/p></description></item><item><title>Blog: Selenium IDE 1.0.12 – now with Firefox 5 support</title><link>https://www.selenium.dev/blog/2011/selenium-ide-1-0-12-firefox-5/</link><pubDate>Mon, 04 Jul 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/selenium-ide-1-0-12-firefox-5/</guid><description>
&lt;p>Last week we quietly released Selenium IDE 1.0.12 on the website. It has Firefox 5 support along with other improvements. See the &lt;a href="http://code.google.com/p/selenium/wiki/SeIDEReleaseNotes">release notes&lt;/a> and &lt;a href="http://blog.reallysimplethoughts.com/2011/06/23/selenium-ide-v1-0-12-is-now-here/">unofficial announcement&lt;/a>. Download it &lt;a href="http://seleniumhq.org/download/">here&lt;/a> or ask Firefox to check for plugins updates.&lt;/p>
&lt;p>And for those who did not download 1.0.11 (it was not pushed through the update system) you will want to &lt;a href="http://blog.reallysimplethoughts.com/2011/06/10/does-selenium-ide-v1-0-11-support-changing-formats/">read about the formatter change&lt;/a> that landed.&lt;/p></description></item><item><title>Blog: Selenium IDE 1.0.11 – Now with Firefox 4 Support!</title><link>https://www.selenium.dev/blog/2011/selenium-ide-1-0-11-now-with-firefox-4-support/</link><pubDate>Mon, 30 May 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/selenium-ide-1-0-11-now-with-firefox-4-support/</guid><description>
&lt;p>We know that you have been waiting eagerly for this release and you have to wait no more. Selenium IDE 1.0.11 is now here and you can get it from the &lt;a href="http://seleniumhq.org/download/">seleniumhq download site&lt;/a>. The update will also be pushed to you automatically over the next couple days.&lt;/p>
&lt;p>Other things of note around this release&lt;br>
•&lt;a href="http://code.google.com/p/selenium/wiki/SeIDEReleaseNotes">Release Notes&lt;br>
&lt;/a>•&lt;a href="http://code.google.com/p/selenium/issues/list">Where to log bugs&lt;/a>&lt;br>
•&lt;a href="http://blog.reallysimplethoughts.com/2011/05/30/welcome-selenium-ide-1-0-11-with-firefox-4-support/">Welcome Selenium IDE 1.0.11 (with Firefox 4 support)&lt;/a>&lt;/p></description></item><item><title>Blog: Atoms have come to Selenium IDE</title><link>https://www.selenium.dev/blog/2010/atoms-have-come-to-selenium-ide/</link><pubDate>Thu, 09 Dec 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/atoms-have-come-to-selenium-ide/</guid><description>
&lt;p>As mentioned in Simon’s &lt;a href="https://www.selenium.dev/blog/2010/going-atomic-why/">Going Atomic: Why?&lt;/a> and &lt;a href="https://www.selenium.dev/blog/2010/going-atomic-how/">Going Atomic: How&lt;/a>, part of the merging of Selenium and WebDriver is to share common code between the two. And as of the 1.0.10 release of Selenium IDE, this merged code, ‘atoms’ is now included.&lt;/p>
&lt;p>Some early users of this release are noticing that this the atom that drives assertAttribute and verifyAttribute is causing their scripts to break. This post explains the ‘why’ and suggests how to fix them as well.&lt;/p>
&lt;p>The HTML spec has the notion of a &lt;em>boolean attribute&lt;/em> which is one that does something just by being there rather than by its value; &lt;em>checked&lt;/em> and &lt;em>selected&lt;/em> are two such examples of this. Optionally, you could give these boolean attributes a value that is the same as their name (checked=”checked”) and your page would still validate, but really, the browsers only care that the attribute exist.&lt;/p>
&lt;p>Prior to 1.0.10, it was not uncommon for people to do something like&lt;/p>
&lt;pre tabindex="0">&lt;code> assertAttribute | checkbox@checked | checked
&lt;/code>&lt;/pre>&lt;p>which fetches the value of the checked attribute on the checkbox with the id or name of checkbox and fails the script is the value is not checked.&lt;/p>
&lt;p>In 1.0.10 though, that will fail &lt;em>even if it is checked&lt;/em>. This is because checked is a boolean attribute and will now return either true or throw an exception saying the attribute doesn’t exist. Redoing the above step check that the boolean attribute is set results in:&lt;/p>
&lt;pre tabindex="0">&lt;code> assertAttribute | checkbox@checked | true
&lt;/code>&lt;/pre>&lt;p>Thankfully, most of the real-world interaction with boolean attributes is focused on checked, disabled, hidden and selected and in these cases using assertAttribute is not really the right thing to do. Instead, the Selenium API provides wrappers for you to use.&lt;br />&lt;/p>
&lt;table>
&lt;tr>
&lt;td>checked&lt;/td>
&lt;td>assertChecked(locator), assertNotChecked(locator), verifyChecked(locator), verifyNotChecked(locator)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>disabled&lt;/td>
&lt;td>assertEditable(locator), assertNotEditable(locator), verifyEditable(locator), verifyNotEditable(locator)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>hidden&lt;/td>
&lt;td>assertVisible(locator), assertNotVisible(locator), verifyVisible(locator), verifyNotVisible(locator)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>selected&lt;/td>
&lt;td>assertSelected*(locator, pattern), assertNotSelected*(locator, pattern), verifySelected*(locator, pattern), verifyNotSelected*(locator, pattern)&lt;/td>
&lt;/tr>
&lt;/table>
&lt;p>Checking for the absence of a boolean attribute that doesn’t have a nice wrapper is a bit of a pain though. In this example I am checking that the boolean attribute &lt;em>multiple&lt;/em> is not on the select element with the name elephants.&lt;/p>
&lt;pre tabindex="0">&lt;code> assertEval | this.browserbot.findElement(&amp;#34;css=select[name=elephants]&amp;#34;).getAttribute(&amp;#34;multiple&amp;#34;); | null
&lt;/code>&lt;/pre>&lt;p>If you find yourself doing this very often, I suggest you wrap it up in a user-extension inside a &lt;a href="http://seleniumhq.org/projects/ide/plugins.html">plugin&lt;/a> as something like&lt;/p>
&lt;pre tabindex="0">&lt;code> assertBooleanAttribute | css=select[name=elephants]@multiple | false
assertBooleanAttribute | css=select[name=elephants]@multiple | true
&lt;/code>&lt;/pre>&lt;p>Hopefully this addresses some of the eventual ‘why the heck did my script break!?!?!’ problems that will no double crop up once Selenium IDE 1.0.10 gets wider distribution.&lt;/p></description></item><item><title>Blog: Selenium 2.0 backend for running IDE test suite via the Se2 Firefox</title><link>https://www.selenium.dev/blog/2010/selenium-2-0-backend-for-running-ide-test-suite-via-the-se2-firefox/</link><pubDate>Mon, 09 Aug 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/selenium-2-0-backend-for-running-ide-test-suite-via-the-se2-firefox/</guid><description>
&lt;p>The GSoC 2010, it’s a great adventure.&lt;/p>
&lt;p>I’m Raynatou, I come from Burkina and do my internship at &lt;a href="http://www.serli.com/">SERLI&lt;/a>. Like all interns in this company the topic of my internship focuses on advanced topics like the integration of WebDriver as backend for Selenium IDE. Selenium IDE is currently built upon Selenium Core for interacting with web pages. Selenium Core has several major limitations, including the inability to fire native events. To avoid these limitations and produce more robust tests, I am investigating Selenium IDE to using WebDriver in place of Selenium Core.&lt;/p>
&lt;p>I’m mentored by Eric Allen from &lt;a href="http://saucelabs.com/">SauceLabs&lt;/a>, my lead mentor, and by Jérémy Hérault from SERLI, his second but not least ;).&lt;/p>
&lt;p>Eric has already done most of this integration earlier this year. The goal of his work is mostly to show what’s possible with Selenium IDE and the Selenium 2.0 Firefox driver. It is based on an asynchronous communication between the Firefox WebDriver extension and Selenium IDE, Se-IDE waiting for that WebDriver says to him that the current command has been passed with success (or not) to call the next command of the current test case (use of callback function). The goal of my mission is to finalize this integration. However, Eric being a crazy man, and he has done it quickly and together we though to another way to do this merge.&lt;/p>
&lt;p>Our new thinking is based on a synchronous communication between both of them. To do it, I get the FirefoxDriver instance and play with it like a normal object, by calling its methods. But the behaviour of FirefoxDriver isn’t as simple as I was thinking. JavaScript being a powerfull language (yes, it can make you shiver), I’ve had just to replace some objects (like Response object) and to use a Proxy (and a bit of IoC-like code) to simplify my life and the code to do. You can see my work on &lt;a href="http://github.com/epall/selenium/commits/webdriver-synchronous">GitHub&lt;/a> and follow it.&lt;/p>
&lt;p>Currently, I think that more than 95% of the Selenium API commands are usable with WebDriver as backend in Selenium IDE. The process was basically to go through the seleniumemulation package and port all of the Java classes into JavaScript methods on the WebDriver class.&lt;/p>
&lt;p>Now, I’m working on Unit tests to cover any of the 2.0 work I’ve done. I managed to get all of the Selenium Core tests to run through IDE. I’ve some refactorings to do to optimize the code and add more comments for a bigger comprehension of my work. I have almost finished.&lt;/p>
&lt;p>I hope you enjoy what I’m doing and we hope (me and my mentors) that this work can be included in the wave of Selenium 2.&lt;/p></description></item><item><title>Blog: Selenium IDE – Looking back and looking forward</title><link>https://www.selenium.dev/blog/2010/selenium-ide-looking-back-and-looking-forward/</link><pubDate>Fri, 09 Jul 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/selenium-ide-looking-back-and-looking-forward/</guid><description>
&lt;p>Its been around six months and three releases since I took the reins of Selenium-IDE. The fundamental change in that time has been the adoption of a plugin model like the fine folks over that Firebug. (We’re also self-hosting it which is big from a project internals perspective.)&lt;/p>
&lt;p>Right now, you can add custom user-extensions and formatters, but in the very near future you will be able to add location strategies as well.&lt;/p>
&lt;p>So what does the future look like for Se-IDE?&lt;/p>
&lt;ul>
&lt;li>&lt;em>1.0.8&lt;/em> – A whack of bug fixes, and maybe the location strategies via plugins&lt;/li>
&lt;li>&lt;em>1.0.9&lt;/em> – If location strategies doesn’t get into 1.0.8, it will be here. And likely bug fixes.&lt;/li>
&lt;li>&lt;em>1.0.10&lt;/em> – Remove UI-Element from Se-IDE and make it a plugin&lt;/li>
&lt;/ul>
&lt;p>There is also work on reworking the internals of Se-IDE from a synchronous model to an asynchronous through Google Summer of Code. If that is successful and we decide to use it, that will trigger a bump to 1.1.0.&lt;/p>
&lt;p>Timelines you ask? Well, when I took over Se-IDE the plan was to do it monthly. That was either naive or overly optimistic so they are starting to stretch a bit. 1.0.8 is going to stretch it some more too. Look for a beta of 1.0.8 towards the end of the month with a final version by mid-August.&lt;/p>
&lt;p>I know you are likely wondering what cool, superdidooper features will you be seeing in Se-IDE over the next while? Ummm, well, actually none. At least not from the core Se-IDE. There will be significant pushback on any new ‘feature’ or change that adds something to Se-IDE. If you cannot accomplish your goal through a plugin, then I would consider than an omission in terms of the API.&lt;/p>
&lt;p>Thats where we are from the maintainer perspective, but end-users also have sway over this as well to some degree. We’re now using the &lt;a href="http://code.google.com/p/selenium/issues/list">Google Code Issue Tracker&lt;/a> for managing the project. If you bug is not there, there is a significantly smaller chance of it being addressed. And if an issue has a number of stars on it, that is also an indicator we should be looking at it.&lt;/p>
&lt;p>Now to hack on locators…&lt;/p></description></item><item><title>Blog: Selenium IDE 1.0.7 – Now with Drag-and-Drop!</title><link>https://www.selenium.dev/blog/2010/selenium-ide-1-0-7-released/</link><pubDate>Thu, 27 May 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/selenium-ide-1-0-7-released/</guid><description>
&lt;p>So its a month later than planned, but Selenium IDE 1.0.7 is now available. The delay was due to some internal build changes and not code, but one of the code changes that is there more than makes up for the delay.&lt;/p>
&lt;p>That’s right, drag-and-drop has &lt;em>finally&lt;/em> arrived to Se-IDE — though credit lies with Jérémy Hérault for implementing it.&lt;/p>
&lt;p>Oh, and if you are Swedish, there is now a localization for you. Yes, a real one. Not just one that makes everything say &lt;em>Bork&lt;/em> as was suggested to me. Although a Pirate locale might be arrr-some.&lt;/p>
&lt;p>For those with version 1.0.5 or newer, the update will be pushed to you automatically over the next couple days. Those new to Selenium IDE or with 1.0.4 or older will want to &lt;a href="http://release.openqa.org/selenium-ide/1.0.7/selenium-ide-1.0.7.xpi">install it now&lt;/a>.&lt;/p>
&lt;p>Other things of note around this release&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://code.google.com/p/selenium/wiki/SeIDEReleaseNotes">Release Notes&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://code.google.com/p/selenium/issues/list?can=2&amp;amp;q=ide&amp;amp;colspec=ID+Stars+Type+Status+Priority+Milestone+Owner+Summary&amp;amp;cells=tiles">Where to log bugs&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>