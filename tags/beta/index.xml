<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Selenium – beta</title><link>https://www.selenium.dev/tags/beta/</link><description>Recent content in beta on Selenium</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 15 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.selenium.dev/tags/beta/index.xml" rel="self" type="application/rss+xml"/><item><title>Blog: Selenium 4 Beta 1 Released</title><link>https://www.selenium.dev/blog/2021/selenium-4-beta-1/</link><pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/selenium-4-beta-1/</guid><description>
&lt;p>We&amp;rsquo;re very happy to announce the release of the first beta of Selenium
4. We&amp;rsquo;re shipping this for Java, .Net, Python, Ruby, and JavaScript,
so if you&amp;rsquo;re using any of those languages, go and grab it from your
package manager of choice!&lt;/p>
&lt;p>This has been the culmination of a lot of work by so many people, not
only the &lt;a href="https://www.selenium.dev/project/structure/#tlc">project TLC&lt;/a>, but also of literally hundreds of people:
205 since we released Selenium 3.141.59, at the last count. A big
thank you to everybody who&amp;rsquo;s helped make this possible!&lt;/p>
&lt;p>So, what&amp;rsquo;s changed since Selenium 3? The answer is both &amp;ldquo;&lt;strong>not much&lt;/strong>&amp;rdquo;
and also &amp;ldquo;&lt;strong>almost everything&lt;/strong>&amp;rdquo;.&lt;/p>
&lt;p>By &amp;ldquo;&lt;strong>not much&lt;/strong>&amp;rdquo;, I mean that if your tests are working with Selenium
3 right now, you should be able to just upgrade your dependency to
Selenium 4. You will find that things that were marked &amp;ldquo;deprecated&amp;rdquo;
are now gone, but the advantage of the long time between the last
Selenium 3 release and this is that you&amp;rsquo;ve had plenty of time to try
and find alternatives.&lt;/p>
&lt;p>If this doesn&amp;rsquo;t work, please let us know! We&amp;rsquo;ve worked hard to ensure
compatibility between the releases, but it&amp;rsquo;s possible we may have
missed some things.&lt;/p>
&lt;p>One thing you may want to do to get ready for the update (which you
can do before updating the dependency itself!) is to update the
drivers you need. In particular, please update &lt;a href="https://github.com/mozilla/geckodriver/releases">geckodriver&lt;/a> to
0.29.0 or later.&lt;/p>
&lt;p>By &amp;ldquo;&lt;strong>almost everything&lt;/strong>&amp;rdquo;, I mean that under the covers there have
been substantial changes. We&amp;rsquo;ve rewritten the Selenium server to allow
it to work not only in the familiar &amp;ldquo;standalone&amp;rdquo; and &amp;ldquo;hub and node&amp;rdquo;
modes, but also in a new &amp;ldquo;distributed&amp;rdquo; mode, which makes it
signifcantly easier to deploy to something such as Kubernetes in a way
that scales well.&lt;/p>
&lt;p>The new server is also wired up with support for &lt;a href="https://opentelemetry.io">OpenTelemetry&lt;/a> and
exposes a &lt;a href="https://github.com/SeleniumHQ/selenium/blob/selenium-4.0.0-beta-1/java/server/src/org/openqa/selenium/grid/graphql/selenium-grid-schema.graphqls">GraphQL endpoint&lt;/a>, so that figuring what&amp;rsquo;s going
on in the Grid, and tracking down what&amp;rsquo;s gone wrong if something
happens, is easier than ever.&lt;/p>
&lt;p>Not all the changes are server-side. We recently wrote about the &lt;a href="https://www.selenium.dev/blog/2020/what-is-coming-in-selenium-4-new-tricks/">new
features in Selenium 4&lt;/a> that you can use in your tests, but some
of the main highlights are:&lt;/p>
&lt;ul>
&lt;li>Relative locators, for finding elements using terms that make
sense to us humans.&lt;/li>
&lt;li>The ability to intercept network traffic&lt;/li>
&lt;li>Authentication with basic or digest authentication.&lt;/li>
&lt;/ul>
&lt;p>We&amp;rsquo;ll be telling you more about these features in later blog posts,
and as we improve our documentation.&lt;/p>
&lt;p>If this sounds interesting, please download the beta from your
favourite package manager (maven, nuget, npm, pip, or the gem), or
directly from the &lt;a href="https://www.selenium.dev/downloads">Selenium site&lt;/a>.&lt;/p></description></item><item><title>Blog: Selenium 3 is Coming</title><link>https://www.selenium.dev/blog/2016/selenium-3-is-coming/</link><pubDate>Tue, 04 Oct 2016 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2016/selenium-3-is-coming/</guid><description>
&lt;p>&lt;a href="http://www.seleniumhq.org/download/">Selenium 3&lt;/a> is coming! As I write this, we think that “beta 4” will be the last beta before the official 3.0 release. I’m here to tell you about what’s changed, and what impact this will have on your testing.&lt;/p>
&lt;h3 id="tldr">TL;DR:&lt;/h3>
&lt;ul>
&lt;li>WebDriver users will just find bug fixes and a drop-in replacement for 2.x.&lt;/li>
&lt;li>Selenium Grid users will also find bug fixes and a simple update.&lt;/li>
&lt;li>The WebDriver APIs are now the only APIs actively supported by the Selenium project.&lt;/li>
&lt;li>The Selenium RC APIs have been moved to a “legacy” package.&lt;/li>
&lt;li>The original code powering Selenium RC has been replaced with something backed by WebDriver, which is also contained in the “legacy” package.&lt;/li>
&lt;li>By a quirk of timing, Mozilla have made changes to Firefox that mean that from Firefox 48 you must use their geckodriver to use that browser, regardless of whether you’re using Selenium 2 or 3.&lt;/li>
&lt;/ul>
&lt;h3 id="in-more-depth">In more depth:&lt;/h3>
&lt;p>When we &lt;a href="https://seleniumhq.wordpress.com/2011/07/08/selenium-2-0/">released Selenium 2.0&lt;/a> in 2011, we introduced the new WebDriver APIs, and encouraged everyone to start moving to them. If you’re using the WebDriver APIs, then Selenium 3.0 is a simple drop-in upgrade. We’ve not changed any of the public WebDriver APIs, and the code is essentially the same as the last 2.x release. If you’re using Selenium Grid, the same applies: in most cases, you can just drop in the new JAR (or update your maven dependency to 3.0.0), and you’re done.&lt;/p>
&lt;p>If the update to Selenium 3 is such a non-event, why did we call this Selenium 3.0? To answer this question, I first need to provide some history, and tell you a little about how Selenium works under the hood. The very first version of Selenium was “just” a very complicated Javascript framework, running in the browser and interpreting the table-based tests you may be familiar with if you use Selenium IDE. We call this “Selenium Core”. This Javascript framework formed the basis of the original implementation of Selenium RC (the oldest set of Selenium APIs, where all the method and functions were on the “&lt;a href="http://seleniumhq.github.io/selenium/docs/api/java/com/thoughtworks/selenium/Selenium.html">Selenium&lt;/a>” interface, and which have been deprecated for some time now). Over time, the needs of modern web testing have grown ever more complicated and sophisticated, and Selenium Core is now less capable of meeting these needs than it was before.&lt;/p>
&lt;p>With Selenium 3.0, we are deleting the original Selenium Core implementation. If you use the old RC interfaces, we provide an alternative implementation that’s backed by WebDriver. This is the same “webdriver-backed selenium” that has been available as part of Selenium 2 since its release. Because the underlying technology has changed from Selenium Core to WebDriver, you may find some places where your existing tests using RC run into issues. Our experience with migrating suites is that it’s normally a systemic issue that can be fixed with a minimal engineering effort (that is, the problem is normally isolated to a few places, and these can be rewritten to avoid problems)&lt;/p>
&lt;p>We’re also removing the original Selenium RC APIs from the main downloads. If you’re a Java user, and need to use them to support existing tests, then you’ll need a dependency to “org.seleniumhq.selenium:selenium-leg-rc:3.0.0” (or later!). It’s strongly recommended that you do not do this unless you absolutely need to.&lt;br>
If you’re someone who runs tests exported from IDE in the table format, there is now a new test runner that the project has made available for you to use that can be &lt;a href="http://www.seleniumhq.org/download/">downloaded&lt;/a> from the project’s website. It takes the same arguments as the old runner, and we’ve done our best to ensure the output of tests remains the same too.&lt;/p>
&lt;p>At the same time as the Selenium project is shipping Selenium 3.0, Mozilla are changing the internals of Firefox in a way that makes it more stable and secure, but which also makes the community provided Firefox Driver no longer work. As such, if you use Firefox for your testing, you’ll need to use the &lt;a href="https://github.com/mozilla/geckodriver/releases">geckodriver&lt;/a>, which is an executable similar to the &lt;a href="https://chromedriver.chromium.org/">chromedriver&lt;/a> and the &lt;a href="https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/">Microsoft WebDriver&lt;/a> for Edge. You’ll need to start using geckodriver even if you’re using Selenium 2 — the change is in the browser, not Selenium. Please be aware that geckodriver is alpha software, based on the evolving W3C WebDriver standard: everyone’s working flat out to give you the best testing experience they can, but there are undoubtedly some bumps in the road when it comes to testing with Firefox.&lt;/p>
&lt;p>This release marks the culmination of a lot of hard work by the Selenium committers and community. I’d like to thank everyone who has been part of this process, and the Selenium users around the world who have done so much to make the project as successful as it is.&lt;/p></description></item><item><title>Blog: Announcing Selenium 3.0-beta1</title><link>https://www.selenium.dev/blog/2016/announcing-selenium-3-0-beta1/</link><pubDate>Fri, 29 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2016/announcing-selenium-3-0-beta1/</guid><description>
&lt;p>At SeleniumConf in 2013, we announced that a new major version of Selenium would be released “by Christmas”. Fortunately, we never said which Christmas, as it has taken us a while to make all the changes we wanted to make! We’re excited to announce the release of the first beta — Selenium 3.0.0-beta1.&lt;/p>
&lt;p>We’d love you to try it out on your projects, and provide us with feedback on where the rough edges are before we ship the 3.0 itself! Please remember that this is a beta release, so your feedback is incredibly helpful and valuable in order to help us smooth any rough edges.&lt;/p>
&lt;p>For the last six years we’ve been advising users to switch to the newer WebDriver APIs and to stop using the original RC APIs. With Selenium 3.0, the original implementation of RC has been removed, replaced by one that sits on top of WebDriver. For many users, this change will go completely unnoticed, as they’re no longer using the RC APIs. For those of you who still are, we’ve done our best to make the change as smooth as possible, but &lt;a href="https://github.com/seleniumhq/selenium/issues">we welcome high quality bug reports&lt;/a> to help us fix any problems that occur. Maven users will need to add a dependency on the new “&lt;a href="http://docs.seleniumhq.org/download/maven.jsp">leg-rc&lt;/a>” package to access the old RC APIs.&lt;/p>
&lt;p>There are some other changes that you might need to be aware of:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>You’ll need to be running Java 8&lt;/strong> to use the Java pieces of Selenium. This is the oldest version of Java officially supported by Oracle, so hopefully you’re using it already!&lt;/li>
&lt;li>Support for Firefox is via Mozilla’s &lt;a href="https://github.com/mozilla/geckodriver/releases">geckodriver&lt;/a>.&lt;/li>
&lt;li>Support for Safari is provided on macOS (Sierra or later) via Apple’s own &lt;a href="https://developer.apple.com/library/prerelease/content/releasenotes/General/WhatsNewInSafari/Articles/Safari_10_0.html">safaridriver&lt;/a>.&lt;/li>
&lt;li>Support for Edge is provided by MS through their &lt;a href="https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/">webdriver server&lt;/a>.&lt;/li>
&lt;li>Only versions 9 or above of IE are supported. Earlier versions may work, but are no longer supported as &lt;a href="https://www.microsoft.com/en-gb/WindowsForBusiness/End-of-IE-support">MS no longer supports them&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>We’ll be posting more information about Selenium 3.0 to this blog soon, but until then if you’re interested in learning more then &lt;a href="https://www.youtube.com/watch?v=bistojJPR98">a recent webinar by Simon&lt;/a> is a great place to start.&lt;/p></description></item><item><title>Blog: Selenium 2.0rc3: The “Next One’s The Big One” Release</title><link>https://www.selenium.dev/blog/2011/selenium-2-0rc3-the-next-ones-the-big-one-release/</link><pubDate>Mon, 27 Jun 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/selenium-2-0rc3-the-next-ones-the-big-one-release/</guid><description>
&lt;p>When we pushed the 2.0rc1 live, we really hoped that the next release would be 2.0 final. We very quickly got some feedback that encouraged us to push a 2.0rc2. Now, after just under three weeks, we’re launching a third and final release candidate. You can download it from the &lt;a href="http://seleniumhq.org/download/">Selenium HQ&lt;/a> site or directly from &lt;a href="http://code.google.com/p/selenium/downloads/list">Google Code.&lt;/a>&lt;/p>
&lt;p>We think we’ve addressed many of the common issues, added some polish and added a host of bug fixes and minor changes, and we hope to hear your feedback! The following headline changes have been made in Selenium 2rc3:&lt;/p>
&lt;ul>
&lt;li>The deprecated RenderedWebElement interface has now been removed. Most of the functionality has been moved to either WebElement (&lt;code>http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/WebElement.html&lt;/code>) or to the Actions (&lt;code>http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/interactions/Actions.html&lt;/code>) class.&lt;/li>
&lt;li>The deprecated WebElement.getValue() method has been removed. Use WebElement.getAttribute(“value”) (&lt;code>http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/WebElement.html#getAttribute(java.lang.String)&lt;/code>) instead.&lt;/li>
&lt;li>After some debate in the team, WebElement.setSelected (&lt;code>http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/WebElement.html#setSelected()&lt;/code>) and “&lt;a href="http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/WebElement.html#toggle()">WebElement.toggle&lt;/a>” have been deprecated. They will be removed in the final release.&lt;/li>
&lt;li>Thanks to the hard work of Mozilla engineers, we now offer Firefox 5 support.&lt;/li>
&lt;li>The &lt;a href="http://www.opera.com/developer/tools/operadriver/">Opera driver&lt;/a>, developed by the lovely chaps at Opera Software, is bundled with this release.&lt;/li>
&lt;li>Improvements in the way that mouse interactions are simulated, particularly when elements are outside the visible area of the page.&lt;/li>
&lt;/ul>
&lt;p>As with almost all releases, there are still some issues left to resolve, but we’re working hard to make Selenium 2.0 as good as it can be.&lt;/p></description></item><item><title>Blog: Selenium 2.0rc2: The Better Working Release</title><link>https://www.selenium.dev/blog/2011/selenium-2-0rc2-the-better-working-release/</link><pubDate>Thu, 02 Jun 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/selenium-2-0rc2-the-better-working-release/</guid><description>
&lt;p>You win some and you lose some. We’d been really pleased to get Selenium 2.0rc1 out, so we were pretty disappointed to hear that some of you were running into problems with the Java version of the IE driver not launching IE sometimes. That’s definitely not good, so we fixed the problems and have &lt;a href="http://code.google.com/p/selenium/downloads/list">released Selenium 2.0rc2&lt;/a>. It’s the same as rc1, but with fewer problems 🙂&lt;/p>
&lt;p>We’re still very keen to hear your feedback! Let us know what you think!&lt;/p></description></item><item><title>Blog: Selenium 2.0rc1: The Grid Release</title><link>https://www.selenium.dev/blog/2011/selenium-2-0rc1-the-grid-release/</link><pubDate>Wed, 01 Jun 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/selenium-2-0rc1-the-grid-release/</guid><description>
&lt;p>We’re very happy to announce the first Release Candidate for Selenium 2, available for Java, C#, Ruby and Python. The API has been stabilised and the functionality needed for the final 2.0 release is mostly in. We’re going to be working hard to get there as soon as possible, but now’s the perfect time to test the waters and provide us with any feedback you may have! &lt;a href="http://code.google.com/p/selenium/downloads/list">Grab the downloads from the site&lt;/a>!&lt;/p>
&lt;p>Highlights:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://code.google.com/p/selenium/wiki/Grid2">Grid 2&lt;/a>: A major feature of this release is Grid 2, an implementation of the Selenium Grid that supports WebDriver’s wire protocol, allowing tests using Selenium WebDriver to be distributed through it. There are some &lt;a href="http://code.google.com/p/selenium/wiki/Grid2">docs to help you get started&lt;/a> on the wiki.&lt;/li>
&lt;li>New &lt;a href="http://code.google.com/p/selenium/wiki/ChromeDriver">ChromeDriver&lt;/a>: Following a complete rewrite of the ChromeDriver, Selenium 2 is now supported natively by the Chrome browser itself. In order to use this, you must download the &lt;a href="http://code.google.com/p/selenium/downloads/list">chromedriver executable&lt;/a> from the Selenium project site.&lt;/li>
&lt;li>&lt;a href="http://www.opera.com/developer/tools/operadriver/">OperaDriver&lt;/a> support: We’ve bundled the most excellent OperaDriver into the release to make it easy to get started testing with &lt;a href="http://www.opera.com/browser/">Opera&lt;/a>.&lt;/li>
&lt;li>Support for native events in Firefox 4.&lt;/li>
&lt;li>&lt;a href="http://code.google.com/p/selenium/wiki/AdvancedUserInteractions">Advanced User Interactions&lt;/a>: An API that allows you to model complex user interactions, such as clicking on an element, holding the shift key, clicking on three more, and then dragging the four elements to a final destination. The entry point to this API is the Actions (&lt;code>http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/interactions/Actions.html&lt;/code>) class.&lt;/li>
&lt;/ul>
&lt;p>We’ve also deleted all methods that were deprecated in 2.0b3 and have marked a number of methods and classes (notably RenderedWebElement (&lt;code>http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/RenderedWebElement.html&lt;/code>) and WebElement.getValue (&lt;code>http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/WebElement.html#getValue()&lt;/code>)) deprecated. These will be deleted in the next release.&lt;/p>
&lt;p>Known issues:&lt;/p>
&lt;ul>
&lt;li>Native events on Linux may not work properly on tests that include alerts and prompts.&lt;/li>
&lt;li>Mouse actions using the Advanced User Interactions API may not work properly for elements that have to be scrolled into view.&lt;/li>
&lt;/ul>
&lt;p>We plan on making our releases more frequent in the run up to 2.0final and polish off the bugs and issues. Stay tuned! This is going to be fun 🙂&lt;/p></description></item><item><title>Blog: Selenium 2.0b3: The Next Gen Browser Release</title><link>https://www.selenium.dev/blog/2011/selenium-2-0b3-the-next-gen-browser-release/</link><pubDate>Mon, 21 Mar 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/selenium-2-0b3-the-next-gen-browser-release/</guid><description>
&lt;p>It’s been about 5 weeks since the release of beta 2, so we’re very pleased to announce that Selenium 2.0b3 has just been released simultaneously for Java, .Net, Ruby and Python. You can &lt;a href="http://seleniumhq.org/download/">download it from Selenium HQ&lt;/a> or from the &lt;a href="http://code.google.com/p/selenium/downloads/list">Google Code site&lt;/a>. This release focused on providing excellent support for the next generation of browsers, particularly IE 9 and Firefox 4, and we think you’ll like what you’ll find.&lt;/p>
&lt;ul>
&lt;li>Restructured documentation at &lt;a href="http://seleniumhq.org/docs/">Selenium HQ&lt;/a>&lt;/li>
&lt;li>An improved user interaction API
&lt;ul>
&lt;li>Including experimental IME support on Windows.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Alerts and prompts handling for IE.&lt;/li>
&lt;li>Marked the following APIs as obsolete in .Net:
&lt;ul>
&lt;li>IRenderedWebElement.Hover()&lt;/li>
&lt;li>IOptions.Speed&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Even more improvements to the Java webdriver-backed selenium
&lt;ul>
&lt;li>We’ll document the migration path before 2.0b4 is out!&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>A significantly faster Android Driver (&lt;code>http://selenium.googlecode.com/files/android-server-2.0b3.apk&lt;/code>)&lt;/li>
&lt;/ul>
&lt;p>As well as these changes, there’s also the regular clutch of bug fixes and tweaks. For the number crunchers, there were a total of &lt;a href="http://code.google.com/p/selenium/source/list?num=331&amp;amp;start=11749">331 changes&lt;/a> that landed in the 5 weeks since the last release, with the 5 most active contributors working on each of the different languages supported by Selenium.&lt;/p>
&lt;p>In addition to the enormous thanks that go to the developers, I’d like to add a big thank you to the Mozilla engineers who chipped in on the IRC channel at the last minute to help us work through some issues with Core. We’d not have been able to get this release out when we did without their help. Thank you Mozilla!&lt;/p>
&lt;p>The next release will be focused on stabilization work, reducing our bug count and adding support for Grid 2.0.&lt;/p></description></item><item><title>Blog: Selenium 2.0b2 Released</title><link>https://www.selenium.dev/blog/2011/selenium-2-0b2-released/</link><pubDate>Tue, 15 Feb 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/selenium-2-0b2-released/</guid><description>
&lt;p>We’ve just released Selenium 2.0b2. If you’re the impatient sort who loves to have the latest and greatest, head over to the &lt;a href="http://code.google.com/p/selenium/downloads/list">download site&lt;/a> and get it while it’s hot. If you’re a Python user, then all you need to do is a simple “pip install -U selenium”. Ruby users can, as ever, simply run “gem install selenium-webdriver”. Maven users need to wait just a little bit longer: we’re going to be checking the release in ASAP.&lt;/p>
&lt;p>Between beta 1 and beta 2, we held a week-long Bug Bash, during which we closed a significant number of bugs. From a user’s perspective, other highlights include:&lt;/p>
&lt;ul>
&lt;li>A more stable, capable iPhone driver.&lt;/li>
&lt;li>Updated &lt;a href="http://code.google.com/p/selenium/downloads/detail?name=selenium-server-2.0b2.zip&amp;amp;can=2&amp;amp;q=">Android driver&lt;/a>.&lt;/li>
&lt;li>Improved python bindings for Selenium WebDriver. The namespace is now “selenium.webdriver”&lt;/li>
&lt;li>Added Selenium.getCssCount (&lt;code>http://selenium.googlecode.com/svn/trunk/docs/api/java/com/thoughtworks/selenium/Selenium.html#getCssCount(java.lang.String)&lt;/code>) to mirror “Selenium.getXpathCount”&lt;/li>
&lt;li>WebElement.getText() (&lt;code>http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/WebElement.html#getText()&lt;/code>) performs more consistently across different browsers.&lt;/li>
&lt;li>Mono users can use the .Net bindings&lt;/li>
&lt;li>Continued to improve the WebDriverBackedSelenium (&lt;code>http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/WebDriverBackedSelenium.html&lt;/code>). If you’re looking to migrate from Selenium 1 to Selenium 2, and want to take your time, this is a useful stepping stone.&lt;/li>
&lt;li>Reworked the Advanced User Interactions APIs. The big change is that the WebDriver APIs no longer rely on classes from the AWT.&lt;/li>
&lt;li>.Net users now have more support classes, to make writing tests less tiresome.&lt;/li>
&lt;li>The remote webdriver makes better use of sockets, which improves stability and scalability on Windows.&lt;/li>
&lt;li>Started to add support for driving multiple IE instances. This is considered experimental, but we’d love to hear it’s working for you!&lt;/li>
&lt;/ul>
&lt;p>If you’re interested in the guts of Selenium 2 and how it worked, then you might find these interesting:&lt;/p>
&lt;ul>
&lt;li>Continued reworking the IE and iPhone drivers to use the Automation Atoms.&lt;/li>
&lt;li>Reworked the structure of the source tree to be more language focused.&lt;/li>
&lt;li>We have the skeleton of a webdriver-backed selenium for Python.&lt;/li>
&lt;/ul>
&lt;p>As you can see, this is a big release. Beta 3 should be out a lot more quickly, and will be focusing on improving support for IE 9 and Firefox 4. Over the course of the 2.0b3 development, we shall also be removing as many deprecated methods as possible, so be sure to remove deprecation warnings from your builds when using 2.0b2!&lt;/p></description></item><item><title>Blog: Selenium 2.0 beta 1 Release</title><link>https://www.selenium.dev/blog/2010/selenium-2-0-beta-1-release/</link><pubDate>Fri, 24 Dec 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/selenium-2-0-beta-1-release/</guid><description>
&lt;p>We recently released the first of the betas for Selenium 2. It’s available for Java, C# and Ruby. If you’ve been holding off trying Selenium 2 because of the alpha label, then the biggest improvement you’ll see is with the new WebDriver APIs, but there’s a lot more!&lt;/p>
&lt;ul>
&lt;li>A promise of relatively stable APIs&lt;/li>
&lt;li>For Firefox only right now, an API for dealing with alerts, prompts and confirms (&lt;code>http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/WebDriver.TargetLocator.html#alert()&lt;/code>).&lt;/li>
&lt;li>A brand new IE driver.&lt;/li>
&lt;li>Better selenium emulation (&lt;code>http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/WebDriverBackedSelenium.html&lt;/code>) when using webdriver&lt;/li>
&lt;li>And a better implementation of webdriver’s API backed by the traditional Selenium technology (&lt;code>http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/SeleneseCommandExecutor.html&lt;/code>).&lt;/li>
&lt;li>Ubiquitous use of &lt;a href="http://sizzlejs.com/">Sizzle&lt;/a> for emulating CSS selectors where native CSS selectors aren’t supported&lt;/li>
&lt;li>The advanced user interactions (&lt;code>http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/interactions/package-frame.html&lt;/code>) API&lt;/li>
&lt;li>An update to the AndroidDriver’s Android app.&lt;/li>
&lt;/ul>
&lt;p>Of course, we’d love this release to be completely bug free, but this is, after all, a beta, so there are some known issues:&lt;/p>
&lt;ul>
&lt;li>The selenium 1.x emulation using IE is a little flaky.&lt;/li>
&lt;li>The ChromeDriver is not as capable as the others.&lt;/li>
&lt;li>Anything in our &lt;a href="http://code.google.com/p/selenium/issues/list">bug list&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>You can download it from here:&lt;/p>
&lt;p>&lt;a href="http://code.google.com/p/selenium/downloads/list">http://code.google.com/p/selenium/downloads/list&lt;/a>&lt;/p>
&lt;p>You can read the javadocs (&lt;code>http://selenium.googlecode.com/svn/trunk/docs/api/java/index.html&lt;/code>) and the ruby docs (&lt;code>http://selenium.googlecode.com/svn/trunk/docs/api/rb/index.html&lt;/code>).&lt;/p>
&lt;p>An obvious question is “When will the beta end?” The short answer is when we’ve implemented the alerts and prompts and advanced user interactions APIs in all supported browsers. We expect there to be some flex in some APIs (removing deprecated methods, and within the advanced user interactions API) but what you have here is basically what you’re going to get when we hit 2.0 final. I have no idea how long this will take, but if you’re interested in helping out, &lt;a href="http://groups.google.com/group/selenium-developers">let us know!&lt;/a>&lt;/p>
&lt;p>Thanks are due to all the committers who have worked so hard to get this code into shape. Thanks are also due to all the people who have taken the time to file bugs, ask for features and participated on the mailing lists. Thank you to you too, for going out and trying this new beta of Selenium 2.&lt;/p>
&lt;p>You rock. 🙂&lt;/p></description></item><item><title>Blog: Selenium 2.0a6 Released</title><link>https://www.selenium.dev/blog/2010/selenium-2-0a6-released/</link><pubDate>Fri, 08 Oct 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/selenium-2-0a6-released/</guid><description>
&lt;p>We are extremely pleased to announce the release of Selenium 2.0a6! Head over to the &lt;a href="http://code.google.com/p/selenium/downloads/list">downloads page&lt;/a> to get it while it’s hot, or wait just a little bit longer for it to appear in a maven repo near you. The .Net version will also be updated soon too, and the python and &lt;a href="http://rubygems.org/gems/selenium-webdriver">ruby libraries&lt;/a> have been having smaller, more frequent releases all this time.&lt;/p>
&lt;p>You’ll be pleased to hear that the Selenium 1.0 APIs have remained constant, so what’s changed? Here, in no particular order are the major changes you’ll find in 2.0a6:&lt;/p>
&lt;ul>
&lt;li>Android support: you can now &lt;a href="http://code.google.com/p/selenium/downloads/detail?name=android-server-2.0a6.apk">download the APK&lt;/a> and run webdriver tests using Android 1.6 to 2.2.&lt;/li>
&lt;li>Firefox 4 support.&lt;/li>
&lt;li>Experimental IE9 support&lt;/li>
&lt;li>New APIs for dealing with HTML5 elements (&lt;code>http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/html5/package-summary.html&lt;/code>) (best implemented, for now, by the mobile webdrivers)&lt;/li>
&lt;li>A richer .Net API&lt;/li>
&lt;li>A move to &lt;a href="http://sizzlejs.com/">Sizzle&lt;/a> for locating elements using CSS in browsers that don’t have a native API for that.&lt;/li>
&lt;li>Far better support for running your existing Selenium RC tests using WebDriver, helping you make a managed migration to the newer APIs.&lt;/li>
&lt;/ul>
&lt;p>There are also lots of nice touches for the more technically inclined, including the ability to re-use instances of FirefoxProfiles (&lt;code>http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/firefox/FirefoxProfile.html&lt;/code>), better configurability when requesting a remote webdriver instance, better resource management and more shared code between the Selenium and WebDriver implementations.&lt;/p>
&lt;p>Thank you to everyone who has taken the time to report a bug on our &lt;a href="http://code.google.com/p/selenium/issues/list">issue tracker&lt;/a>, or raised problems on one of our &lt;a href="https://groups.google.com/group/webdriver">mailing&lt;/a> &lt;a href="http://www.google.com/url?q=http://groups.google.com/group/selenium-users">lists&lt;/a>, or shown up for some of the banter on the IRC channel: without your involvement, the project wouldn’t be half as much fun, and wouldn’t be as capable as it is. Thanks are also due to the development team, who have poured an enormous amount of work into this release (538 revisions in under 90 days, or about 6 check-ins each and every day)&lt;/p>
&lt;p>Hope you like it!&lt;/p></description></item><item><title>Blog: Selenium 2.0a5 Released</title><link>https://www.selenium.dev/blog/2010/selenium-2-0a5-released/</link><pubDate>Wed, 14 Jul 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/selenium-2-0a5-released/</guid><description>
&lt;p>I’m pleased to announce the release of Selenium 2.0a5, available for &lt;a href="http://code.google.com/p/selenium/downloads/list">immediate download&lt;/a>. This release brings a host of changes under the hood, and represents the efforts of many contributors. Highlights include:&lt;/p>
&lt;ul>
&lt;li>New interfaces (&lt;code>http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/html5/package-frame.html&lt;/code>) for dealing with HTML 5 elements.&lt;/li>
&lt;li>An API for implicit waits (&lt;code>http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/WebDriver.Timeouts.html&lt;/code>): quietly waiting until an element is present before continuing with a test. You can use them like this: &lt;code>driver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS)&lt;/code>&lt;/li>
&lt;li>A revamped Firefox driver.&lt;/li>
&lt;li>More shared code between Selenium and WebDriver.&lt;/li>
&lt;li>You can now pass firefox profiles to the remote webdriver (this includes extensions and proxy settings!)&lt;/li>
&lt;li>Improved .Net bindings: lots of updates to help bring them more in-line with the Java equivalents.&lt;/li>
&lt;/ul>
&lt;p>Waiting in the wings for release soon is an AndroidDriver, which opens up the world of testing webapps on Android devices through the Selenium WebDriver API.&lt;/p>
&lt;p>If you’re a pythonista or rubyist, you’ve not been left out of this bonaza of new hotness. There have been regular updates for these languages, which can be installed via “easy_install -U selenium” or “gem install selenium-webdriver” depending on your language of choice.&lt;/p>
&lt;p>Hopefully the next alpha will be the last before we plunge bravely into the betas. Exciting times are ahead!&lt;/p></description></item><item><title>Blog: Selenium 2.0a3 Released</title><link>https://www.selenium.dev/blog/2010/selenium-2-0a3-released/</link><pubDate>Mon, 19 Apr 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/selenium-2-0a3-released/</guid><description>
&lt;p>Selenium 2.0a3 has been released and can be downloaded from the &lt;a href="http://code.google.com/p/selenium/downloads/list">Selenium project site&lt;/a>. This is a major update to 2.0 and all users are encouraged to update. The new features include:&lt;/p>
&lt;ul>
&lt;li>An improved &lt;a href="http://code.google.com/p/selenium/wiki/JsonWireProtocol">remote protocol&lt;/a>.&lt;/li>
&lt;li>Updating the version of HtmlUnit used to 2.7.&lt;/li>
&lt;li>Improved support for simulating user interactions with the browser via native events on Linux.&lt;/li>
&lt;li>Better support for Firefox 3.6.&lt;/li>
&lt;li>Bug fixes&lt;/li>
&lt;/ul>
&lt;p>The .Net, Python and Ruby bindings will be updated soon, as will the maven artefacts.&lt;/p>
&lt;p>The next release will be Selenium 2.0a4, and it is planned to include the following when it is released in late May:&lt;/p>
&lt;ul>
&lt;li>Android support&lt;/li>
&lt;li>A new API to support writing tests involving complex user interactions.&lt;/li>
&lt;li>Far more integration of the underlying architecture.&lt;/li>
&lt;/ul></description></item></channel></rss>